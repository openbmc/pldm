{
  "comments": [
    {
      "key": {
        "uuid": "6595c9ac_4738ac2d",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T00:21:01Z",
      "side": 1,
      "message": "Why aren\u0027t length and offset off_t? Wouldn\u0027t it be better for buffer to be const void *?",
      "range": {
        "startLine": 274,
        "startChar": 42,
        "endLine": 274,
        "endChar": 50
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11575169_9d781e0d",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-07-09T06:17:04Z",
      "side": 1,
      "message": "this is how it has been designed in the file io and other files. he followed the same. may be we can do that improvement later on which needs a change in all the file types",
      "parentUuid": "6595c9ac_4738ac2d",
      "range": {
        "startLine": 274,
        "startChar": 42,
        "endLine": 274,
        "endChar": 50
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb3b0c0_d84b8b04",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T00:21:01Z",
      "side": 1,
      "message": "This is a bit lazy? This isn\u0027t a failure, you need to keep moving your write pointer through the buffer (potentially issuing multiple write calls).",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 5
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ba7bc66_d88a48b1",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-07-09T07:17:02Z",
      "side": 1,
      "message": "Sorry, It is my mistake.\nThe return value of the write method has only two cases: success (the return value is equal to the number of bytes written) and failure (-1).\nUpdated.",
      "parentUuid": "fdb3b0c0_d84b8b04",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 5
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae668169_f368432b",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T12:09:50Z",
      "side": 1,
      "message": "the return value of write() can be *less* than the length provided as a parameter, so dropping this check isn\u0027t the right way to solve it. You need a loop to iterate through the buffer until write() has written all the data in the buffer.",
      "parentUuid": "1ba7bc66_d88a48b1",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 5
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e9c6b26_20f382d4",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T00:21:01Z",
      "side": 1,
      "message": "Why do this test again? Why not just call storePel() in the happy case above?",
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4971abc3_73e7c2a3",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-07-09T07:17:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7e9c6b26_20f382d4",
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0999d00d_dde80421",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T00:21:01Z",
      "side": 1,
      "message": "There wasn\u0027t a response to my request to pass a file descriptor here (and through the D-Bus API) instead of the file name. Using a file descriptor is a better representation of the problem generally (removes a lot of the races).",
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb95fcdd_9e66c289",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-07-09T06:17:04Z",
      "side": 1,
      "message": "the current DBus method  \"Create\" accepts a filename. and we are using a filename for pels sent by Phyp as well\nsupporting a fd as parameter would need change from both the sides which may not be possible immediately",
      "parentUuid": "0999d00d_dde80421",
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbf83ed4_9c78447f",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-08T13:16:25Z",
      "side": 1,
      "message": "use after move?",
      "range": {
        "startLine": 323,
        "startChar": 15,
        "endLine": 323,
        "endChar": 22
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "192613ad_dc068d3d",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-09T00:21:01Z",
      "side": 1,
      "message": "Not only that, but there\u0027s no guarantee that the dbus call backing storePel() has even completed because we don\u0027t wait for a response. This could remove the file before the remote call has even executed, and as we\u0027re passing a file name and not a descriptor, the remote daemon will hit an ENOENT.",
      "parentUuid": "fbf83ed4_9c78447f",
      "range": {
        "startLine": 323,
        "startChar": 15,
        "endLine": 323,
        "endChar": 22
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c9ecb0_c0da6e62",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-07-09T06:17:04Z",
      "side": 1,
      "message": "may be deleting the file can be done by pel daemon?",
      "parentUuid": "192613ad_dc068d3d",
      "range": {
        "startLine": 323,
        "startChar": 15,
        "endLine": 323,
        "endChar": 22
      },
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa407f87_685fa891",
        "filename": "oem/ibm/libpldmresponder/file_io_type_pel.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-07-09T07:17:02Z",
      "side": 1,
      "message": "I have replaced `std::move()` with `fs::path::string`.",
      "revId": "c7feb7202b909272cc6947a8bb85caf02873b517",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}