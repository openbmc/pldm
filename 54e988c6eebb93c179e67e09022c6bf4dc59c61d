{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1cf67bff_25995570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 71
      },
      "lineNbr": 0,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-11T07:25:20Z",
      "side": 1,
      "message": "Hi @manojkiran.eda@gmail.com,\n\nCould you please help me review this series of commits?\n\nThank you very much!",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ed5ef74_1f36c328",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 71
      },
      "lineNbr": 0,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-01T02:45:48Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\n\nWe can completely remove the ConfigurationDiscoveryHandler class from the OEM meta code if you think that’s fine. In detail, we’d replace the slot number retrieval with just returning \"0\" in the OEM meta code, and handle our own mechanism in the downstream code. What do you suggest I do?",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f307d885_7822a11e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 71
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-03T00:28:50Z",
      "side": 1,
      "message": "As my opinion, the Configuration_discovery_handler.hpp and be added in others commit.\nSo in this commit just add OEM Meta handler.",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9250886b_03eb9da9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 71
      },
      "lineNbr": 0,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-12T02:43:22Z",
      "side": 1,
      "message": "The class Configuration_discovery_handler is closely tied to OemMETA, so there’s no reason to split them into two commits. The only question is whether to upstream this class or remove it entirely from upstream.",
      "parentUuid": "f307d885_7822a11e",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8418ca78_b0f8b063",
        "filename": "oem/meta/oem_meta.hpp",
        "patchSetId": 71
      },
      "lineNbr": 33,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-03T00:28:50Z",
      "side": 1,
      "message": "ConfigurationDiscoveryHandler is return I think.",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4977cd02_96ad32a3",
        "filename": "oem/meta/oem_meta.hpp",
        "patchSetId": 71
      },
      "lineNbr": 33,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-12T02:43:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8418ca78_b0f8b063",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d82d762a_3f69cd1d",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 1,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-03T00:28:50Z",
      "side": 1,
      "message": "There are many defined functions in the file but don\u0027t used. Please remove them and add when it is use.",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac816721_815bd37e",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 1,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-12T02:43:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d82d762a_3f69cd1d",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a48b604d_f9377bba",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "Why are these in the header file?  You should only need these at the implementation site.  They\u0027re not part of the API, so they end up being clutter here.",
      "range": {
        "startLine": 40,
        "startChar": 29,
        "endLine": 40,
        "endChar": 46
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f18b7cbe_a66d49c4",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 40,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a48b604d_f9377bba",
      "range": {
        "startLine": 40,
        "startChar": 29,
        "endLine": 40,
        "endChar": 46
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6befc77b_ac1a2dbe",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 53,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "Please ensure all public functions have doxygen.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8990a149_bbdb8ab7",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 53,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6befc77b_ac1a2dbe",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7495baf3_c8f1eb33",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 57,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-03T00:28:50Z",
      "side": 1,
      "message": "Add description about the return.",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe5805b6_66c82f97",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 57,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-12T02:43:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7495baf3_c8f1eb33",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973433ab_637c2e33",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 59,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-03T00:28:50Z",
      "side": 1,
      "message": "Instead of using `[[maybe_unused]] const std::string\u0026 terminusName` you can use `const std::string\u0026`. Apply the same for others APIs.",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4659fcf3_4f67e0ac",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 59,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-12T02:43:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "973433ab_637c2e33",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcbdbb45_d9003073",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "const std::map?  I\u0027m guessing you don\u0027t want callers to change the map on you?",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 32
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a632bf44_e7ed4ac6",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 69,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged. This will be fixed in the next patch set.",
      "parentUuid": "fcbdbb45_d9003073",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 32
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1ce5b70_3bdbad5c",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 75,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "I don\u0027t understand this in the slightest.  This is an empty implementation defined inline and there are no returns.  What does it mean to \"search\"?",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aaf8df6_76c568c8",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 75,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a1ce5b70_3bdbad5c",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07e300a0_92e27e04",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 79,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "`findConfig`?",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 31
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca71303f_bd59ca0c",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 79,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged. This will be fixed in the next patch set.",
      "parentUuid": "07e300a0_92e27e04",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 31
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e859574_3e248e52",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 92,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "Why do we have so many empty functions?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 92,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3368e9d6_28f2022a",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 92,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1e859574_3e248e52",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 92,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f66ba45b_586a4636",
        "filename": "oem/meta/requester/configuration_discovery_handler.hpp",
        "patchSetId": 71
      },
      "lineNbr": 92,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-19T02:37:32Z",
      "side": 1,
      "message": "The class Configuration_discovery_handler uses some D-Bus interfaces that the upstream Entity Manager does not support. This is why the class has an empty function implementation. We can either push the empty implementation upstream, or keep the entire class in a downstream patch.",
      "parentUuid": "3368e9d6_28f2022a",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 92,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e7b6b36_90d2773d",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 57,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "Why are these \"error\"",
      "range": {
        "startLine": 57,
        "startChar": 13,
        "endLine": 57,
        "endChar": 18
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4aa13331_b6cad1f9",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 57,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Because this should never happen on a META machine. Every MCTP endpoint is expected to have this IANA value. Do you want me to replace it with lg2::info or something else?",
      "parentUuid": "6e7b6b36_90d2773d",
      "range": {
        "startLine": 57,
        "startChar": 13,
        "endLine": 57,
        "endChar": 18
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d315e81_d3fd9da5",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 81,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "We should not be recording specific machine information here.  What is the purpose of this?",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f380caf_a0d79a10",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 81,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4d315e81_d3fd9da5",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5662edfd_9b6167ad",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 81,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-19T02:37:32Z",
      "side": 1,
      "message": "This is a workaround for an issue caused by a timeout when attempting to retrieve the slot number recorded on D-Bus. If the retrieval fails, we fall back to using tid / 10 as the slot number. However, this calculation is only valid on Yosemite4 machines.",
      "parentUuid": "1f380caf_a0d79a10",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14b931f7_09dbbcde",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 81,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-08-21T17:48:45Z",
      "side": 1,
      "message": "@baxiche@gmail.com can we remove this in the initial version of the commit and add it back later in its own dedicated commit? That way, we document exactly what the workaround is.",
      "parentUuid": "5662edfd_9b6167ad",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9da4abd1_384e07b3",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 81,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-09-01T02:45:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "14b931f7_09dbbcde",
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd6c5d6f_56cf2754",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 129,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "This dbus property is a \"size_t\" and not a \"uint64_t\".  Why is it a uint64_t here?\n\nIf this is because of an entity-manager quirk where it isn\u0027t following the dbus definition, please leave a comment.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 35
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37bb51c6_11e85075",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 129,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "bd6c5d6f_56cf2754",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 35
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91a03066_b8ebeaf8",
        "filename": "oem/meta/utils.cpp",
        "patchSetId": 71
      },
      "lineNbr": 129,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T04:04:58Z",
      "side": 1,
      "message": "This property has the signature t on D-Bus, which corresponds to uint64_t.",
      "parentUuid": "37bb51c6_11e85075",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 129,
        "endChar": 35
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30184d49_02689f62",
        "filename": "pldmd/pldmd.cpp",
        "patchSetId": 71
      },
      "lineNbr": 330,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "Can we keep these ordered alphabetically?\n\nA \u003c I \u003c M",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 330,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c844de20_d58a59dc",
        "filename": "pldmd/pldmd.cpp",
        "patchSetId": 71
      },
      "lineNbr": 330,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "Acknowledged. This will be fixed in the next patch set.",
      "parentUuid": "30184d49_02689f62",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 330,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f36a1b7_06b982a2",
        "filename": "pldmd/pldmd.cpp",
        "patchSetId": 71
      },
      "lineNbr": 361,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-15T16:29:37Z",
      "side": 1,
      "message": "This seems pretty awkward.  Is there a better way to do this that we don\u0027t need a OEM_META embedded here?",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 361,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "523ecb6f_073df26d",
        "filename": "pldmd/pldmd.cpp",
        "patchSetId": 71
      },
      "lineNbr": 361,
      "author": {
        "id": 1002480
      },
      "writtenOn": "2025-08-18T03:38:23Z",
      "side": 1,
      "message": "The reason I implemented it this way is to utilize the MctpDiscoveryHandlerIntf. OEM META needs to monitor the signal emitted by the MCTP service, so oemMETA has to be passed to the constructor of MctpDiscovery to achieve this. The only way to separate OEM META from this implementation is to give it its own mechanism to monitor the MCTP interface, which is easy to do. Would that be okay?",
      "parentUuid": "2f36a1b7_06b982a2",
      "range": {
        "startLine": 356,
        "startChar": 0,
        "endLine": 361,
        "endChar": 6
      },
      "revId": "54e988c6eebb93c179e67e09022c6bf4dc59c61d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}