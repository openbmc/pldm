{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0ae3f221_dd6659ac",
        "filename": "libpldmresponder/bios_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 551,
      "author": {
        "id": 1000845
      },
      "writtenOn": "2024-05-21T09:28:08Z",
      "side": 1,
      "message": "using unordered maps or switch case better in this case?",
      "range": {
        "startLine": 540,
        "startChar": 8,
        "endLine": 551,
        "endChar": 9
      },
      "revId": "40f81205020f58fa67c5583d7b3d38bf55c7eb89",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b06109a_03195848",
        "filename": "libpldmresponder/bios_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 551,
      "author": {
        "id": 1000845
      },
      "writtenOn": "2024-05-21T09:31:28Z",
      "side": 1,
      "message": "Define a map to associate attribute types with their respective handling functions. Find the handler for the given attribute type, If the handler is found, call it; otherwise, handle the error:\n\nstatic const std::unordered_map\u003cstd::string, std::function\u003cvoid(const Json\u0026)\u003e\u003e attributeHandlers \u003d {\n        {\"string\", [](const Json\u0026 entry) { constructAttribute\u003cBIOSStringAttribute\u003e(entry); }},\n        {\"integer\", [](const Json\u0026 entry) { constructAttribute\u003cBIOSIntegerAttribute\u003e(entry); }},\n        {\"enum\", [](const Json\u0026 entry) { constructAttribute\u003cBIOSEnumAttribute\u003e(entry); }}\n    };",
      "parentUuid": "0ae3f221_dd6659ac",
      "range": {
        "startLine": 540,
        "startChar": 8,
        "endLine": 551,
        "endChar": 9
      },
      "revId": "40f81205020f58fa67c5583d7b3d38bf55c7eb89",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}