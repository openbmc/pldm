{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4d387317_c848ceca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-08-22T10:22:37Z",
      "side": 1,
      "message": "@Thu Nguyen \nPLDM right now has the asynchronous approach to respond to a request message, will this queuing of request messages not deviate from the asynchronous approach and move back to the synchronous one?",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4032a124_2ed46e2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-22T21:58:51Z",
      "side": 1,
      "message": "About handling the respond to a PLDM request message, we still keep asynchronous approach. The caller of `registerRequest` still registers the request and when the response message comes the callback functions `responseHandler` will be called. No need to wait for the response.\n\nBut for sending/receiving the PLDM Messages we have to move back to \"synchronous approach\" to meet \"Requirements for requesters\" as DSP0240 spec.",
      "parentUuid": "4d387317_c848ceca",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6e4cb9c_edfb8e4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-22T23:33:54Z",
      "side": 1,
      "message": "\u003e But for sending/receiving the PLDM Messages we have to move back to \"synchronous approach\" to meet \"Requirements for requesters\" as DSP0240 spec.\nActually, we still keep the asynchronous approach in sending/receiving the PLDM Messages. Handler sends the message and handles response when it is available. It does not wait for the response.",
      "parentUuid": "4032a124_2ed46e2c",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10ce5592_c2f40c4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-08-25T07:28:28Z",
      "side": 1,
      "message": "@Thu Nguyen, Was this intended to solve the instance ID expiration problem on PLDM requests?\nHow is Queue helping us solve this issue? Is there any other use case you are trying to solve using a queue?",
      "parentUuid": "a6e4cb9c_edfb8e4a",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a9c41e_d6684594",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-25T07:55:27Z",
      "side": 1,
      "message": "\u003e @Thu Nguyen, Was this intended to solve the instance ID expiration problem on PLDM requests?\n\nThis patch set only makes the current implementation of PLDM request message handler to follow the spec.\nIt was not intended to solve the problem you said.\nWhat is your issue in the instance ID expiration? Can we discuss in #pmci discord to save time?\n\n\u003e How is Queue helping us solve this issue? Is there any other use case you are trying to solve using a queue?",
      "parentUuid": "10ce5592_c2f40c4f",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0d5ce57_1069a2cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-08-25T08:40:53Z",
      "side": 1,
      "message": "I assumed this commit was pertaining to the discord conversation - https://discord.com/channels/775381525260664832/778790638563885086/1138703165588512778 onwards where @arj mentioned it would be a partial solution to the instance ID expiration problem.",
      "parentUuid": "36a9c41e_d6684594",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ca2bae_545ffffe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-25T08:50:06Z",
      "side": 1,
      "message": "There is no instanceID expiration problem. We thought that we can order the request to one endpoint by the expiration of instanceID because the pldmtool and pldmd are using the same instanceID pool.We will only response new InstanceID when the allocated one is free.\nBut there are some problems/tricky with that approach and we can\u0027t finalize the solution.\nThis patch set will handle the request message queue for pldmd only, it is a partial solution because it will not queue the request from PLDMtool.",
      "parentUuid": "b0d5ce57_1069a2cf",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dde65b6e_028d77b0",
        "filename": "requester/handler.hpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2023-08-22T10:22:37Z",
      "side": 1,
      "message": "Can we have both these above `if` checks in a single `if` condition?",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ebd3493_e3c3d447",
        "filename": "requester/handler.hpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-22T21:58:51Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "dde65b6e_028d77b0",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f82a7c15_d86275fe",
        "filename": "requester/handler.hpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-22T21:58:51Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "dde65b6e_028d77b0",
      "revId": "3efeb368590bc989f8871a06eaf8b134bfb67cba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}