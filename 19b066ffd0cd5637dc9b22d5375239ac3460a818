{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4bd6de2b_1c4a0a7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "nit:we can remove this",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66f04377_b06b38f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4bd6de2b_1c4a0a7d",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f35b5c23_0ddcf9a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 19,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-06-29T05:32:04Z",
      "side": 1,
      "message": "Can you state what testing was done for this patch and in general add that to all patches in this chain?",
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f236ce3_721f0b99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "Minor comments, looks good.",
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "910a8eea_ace49fbc",
        "filename": "meson.build",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-06-04T17:38:15Z",
      "side": 1,
      "message": "can this some how be put inside the environment file that pldm consumes \u0026 loads when it starts ? instead of having yet another configuration file ? or can we just have one common configuration file for pldm in which we add all the configuration settings \n\nMy motive behind this question is that , having one common configuration file would allow us to do things like graceful reload of settings without actually restarting pldm.",
      "range": {
        "startLine": 64,
        "startChar": 74,
        "endLine": 64,
        "endChar": 96
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3403d99f_827d589d",
        "filename": "meson.build",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2022-06-29T05:05:43Z",
      "side": 1,
      "message": "On the flip side, a single config file would require all users of it to be aware to a certain extent of features they don\u0027t care about...",
      "parentUuid": "910a8eea_ace49fbc",
      "range": {
        "startLine": 64,
        "startChar": 74,
        "endLine": 64,
        "endChar": 96
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee23e17a_d8caab94",
        "filename": "meson.build",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "PLDM requester as BMC will not be interested in the configuration files of BMC as PLDM responder. \n\nAlso static_eid_table_path is an optional config and the preferred way is for pldmd to be driven by MCTPEndpoint interface.",
      "parentUuid": "3403d99f_827d589d",
      "range": {
        "startLine": 64,
        "startChar": 74,
        "endLine": 64,
        "endChar": 96
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "994d98a8_f9a81ce7",
        "filename": "meson.build",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-06-30T06:20:25Z",
      "side": 1,
      "message": "\u003e On the flip side, a single config file would require all users of it to be aware to a certain extent of features they don\u0027t care about...\n\nI dont understand why they have to be aware ..can you explain more ? i was thinking more like a toml config file where we have sections like [Requester], [Responder] e.t.c in a single configuration file. And get them parsed and converted to config data and code can decide what they need to look for based on the config information.\n\nI see a lot of beginners in discord being confused on what files are needed/not needed to get thier pldm stack working, just a thought that a single configuration file would reduce confusion.",
      "parentUuid": "ee23e17a_d8caab94",
      "range": {
        "startLine": 64,
        "startChar": 74,
        "endLine": 64,
        "endChar": 96
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0caef34_634ef6f7",
        "filename": "meson.build",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-06-30T06:22:54Z",
      "side": 1,
      "message": "Again i am not trying to ask if this can be done in this commit, so this is not a hard stop on this commit. We can go-ahead and merge this commit if maintainers are okay.",
      "parentUuid": "994d98a8_f9a81ce7",
      "range": {
        "startLine": 64,
        "startChar": 74,
        "endLine": 64,
        "endChar": 96
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e70cfa95_3aa76b73",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 19
      },
      "lineNbr": 38,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "On interfacesRemoved we need to cleanup instead of discoverEndpoints?",
      "range": {
        "startLine": 38,
        "startChar": 24,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be2246c7_a0e1453d",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 19
      },
      "lineNbr": 38,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "According to current design of the MctpDiscovery class, there is nothing to cleanup so the action to handle Added/Removed signal for callback function is the same. MctpDiscovery just update the latest MCTP endpoint list to handlers.\n\nIt should make sense that cleanup actions be preformed by the mangers handler(e.g. fw-update, platform-mc) which has used the Endpoint information to instantiate class object.",
      "parentUuid": "e70cfa95_3aa76b73",
      "range": {
        "startLine": 38,
        "startChar": 24,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aaea4ab_768da1d5",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "This can be reused across multiple modules, we can move to common/types.hpp.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 40
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ac9bf3a_9a84dfa7",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9aaea4ab_768da1d5",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 40
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef9c903_dc830145",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-06-04T17:38:15Z",
      "side": 1,
      "message": "Doxygen missing",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 52
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e9c4ca_9cbfcffc",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 64,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7ef9c903_dc830145",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 52
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64454e09_5ba37ff2",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 68,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-06-29T11:02:26Z",
      "side": 1,
      "message": "nit: correct the typo - discoverEndpoints()",
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcac9cc8_27e3bb3f",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 68,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64454e09_5ba37ff2",
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de2b6227_567ccb10",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 70,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-06-04T17:38:15Z",
      "side": 1,
      "message": "here as well",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 51
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d8af8b7_dd9a1e12",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 19
      },
      "lineNbr": 70,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-06-29T21:37:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "de2b6227_567ccb10",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 51
      },
      "revId": "19b066ffd0cd5637dc9b22d5375239ac3460a818",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}