{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be17a213_a58b6754",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 105
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-15T03:04:10Z",
      "side": 1,
      "message": "Can we apply the host-bmc/utils.* for others MCTP endpoint?\nIf Yes, should we move those code out of host-bmc?",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31e056f_1e22a4e4",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "typo: `s/contanied/container/` ? `s/contanied/contained/` ?",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37da5685_ddecdfc2",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 31,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "As above.",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3026c7f_d1a17df8",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 43,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "You can embed this `break` in the loop condition, right? That feels like an improvement to readability (fewer loop exit points).\n\n```\nfor (size_t i \u003d 1; i \u003c evs.size() \u0026\u0026 !find; i++) {\n    ...\n}\n```\n\nAlso I think it would be an improvement to `s/find/found/`, but also, perhaps don\u0027t open-code the loop and instead extract it into a separate function.\n\nFurther, is there a better datastructure for all this? A three-dimensional search space feels like it could lead to performance issues.",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2753f42f_134b478d",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 53,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "Why not move this to below line 42? Or, perhaps you could do it in the loop header?\n\n```\nfor (auto it \u003d parents.begin();\n     it !\u003d parents.end();\n     it \u003d find ? parents.erase(it) : std::next(it)) {\n    ...\n}\n```",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67b3d50_371bee42",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "Typo as above.",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec2dcc5_5e9da60a",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 90,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "Typo as above.",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67b67a44_085fca75",
        "filename": "host-bmc/utils.cpp",
        "patchSetId": 105
      },
      "lineNbr": 110,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-08-16T06:43:40Z",
      "side": 1,
      "message": "What are we trying to do here? Why are assigning the entity into the map if the call fails?",
      "revId": "84014c3b9f7906facf550c9a6e26948b6da9696c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}