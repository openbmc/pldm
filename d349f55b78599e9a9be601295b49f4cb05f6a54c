{
  "comments": [
    {
      "key": {
        "uuid": "aaadafe2_3b8e6a6b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "\"entity_association_tree: Keep tree updated across host reboots\"\n\nThis is a more specific heading.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 14
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2eb923_2543383d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "tried to fit in as much as possible (within 50chars)",
      "parentUuid": "aaadafe2_3b8e6a6b",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 14
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31787b21_83b3ea12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "Please align the commit message text.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60737ba9_64bba030",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31787b21_83b3ea12",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 13,
        "endChar": 31
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bc2b257_90ee1f70",
        "filename": "host-bmc/host_pdr_handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "https://github.com/openbmc/pldm/blob/master/libpldm/pdr.h#L251\n\nDoes this pldm_entity_association_tree_destroy serve the purpose?",
      "range": {
        "startLine": 86,
        "startChar": 20,
        "endLine": 86,
        "endChar": 74
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4077720_3d258a61",
        "filename": "host-bmc/host_pdr_handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "no. that destroys the tree also which can not be done here. we just need to make the tree empty while the tree still being valid",
      "parentUuid": "6bc2b257_90ee1f70",
      "range": {
        "startLine": 86,
        "startChar": 20,
        "endLine": 86,
        "endChar": 74
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1621022b_e75d6e5b",
        "filename": "host-bmc/host_pdr_handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-11T15:01:04Z",
      "side": 1,
      "message": "Not very familiar with the entity association tree code, will defer this to Deepak.",
      "parentUuid": "d4077720_3d258a61",
      "range": {
        "startLine": 86,
        "startChar": 20,
        "endLine": 86,
        "endChar": 74
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e52eb10_f64f9e46",
        "filename": "host-bmc/host_pdr_handler.hpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "Making the bmcEntityTree static and initialize it from _fetchPDR makes the code difficult to read and dependency is not clear. \n\nInstead of that I would suggeste bmcEntityTree is initialised when BMC\u0027s entity association tree is built.(https://github.com/openbmc/pldm/blob/master/libpldmresponder/fru.cpp#L21)",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 180,
        "endChar": 62
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19f2df06_30ea0ca3",
        "filename": "host-bmc/host_pdr_handler.hpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "yeah ack. but that needs a detailed design considering the CM activity(concurrent maintenance). i am preparing the design for that. but until the CM feature comes in we need to solve the issue as this has been blocking several ipls. as of now we can safely assume that the whole bmc entity tree is constructed and will not be changed when we start getting Host PDRs. so i kept the bmc entity tree here. the future plan is to maintain a separate copy of the tree starting from pldmd.cpp and keep that updated whenever any fru is added/deleted from the bmc",
      "parentUuid": "6e52eb10_f64f9e46",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 180,
        "endChar": 62
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f60a05c_92c9c9ea",
        "filename": "host-bmc/host_pdr_handler.hpp",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-11T15:01:04Z",
      "side": 1,
      "message": "My suggestion will not need any major change, HostPDRHandler needs to expose an API to set the BMC entity tree once it is built in builtFruTable.",
      "parentUuid": "19f2df06_30ea0ca3",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 180,
        "endChar": 62
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72b7229f_d0f887ad",
        "filename": "libpldm/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "Please add unit test",
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6bf2457_b0f9deba",
        "filename": "libpldm/pdr.c",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "yeah",
      "parentUuid": "72b7229f_d0f887ad",
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6645c404_040951ef",
        "filename": "libpldm/pdr.h",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-05-10T11:32:11Z",
      "side": 1,
      "message": "nit: pldm_entity_association_tree_copy",
      "range": {
        "startLine": 297,
        "startChar": 5,
        "endLine": 297,
        "endChar": 43
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a4f415_d478f504",
        "filename": "libpldm/pdr.h",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1000181
      },
      "writtenOn": "2021-05-11T10:56:51Z",
      "side": 1,
      "message": "but i am not creating the copy of the tree pointer here. the content of the tree starting from the root is getting copied to another existing tree",
      "parentUuid": "6645c404_040951ef",
      "range": {
        "startLine": 297,
        "startChar": 5,
        "endLine": 297,
        "endChar": 43
      },
      "revId": "d349f55b78599e9a9be601295b49f4cb05f6a54c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}