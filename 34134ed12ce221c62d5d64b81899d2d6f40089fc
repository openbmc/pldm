{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ded1d1c5_47054f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-14T05:10:28Z",
      "side": 1,
      "message": "We need concern about the way to handle multiple of sensor PDRs types in sensorManager. Because beside NumericSensorPDRs, we also have EffecterPDRs, CompactNumericPDRs.",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05924e10_c4aa119a",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 11
      },
      "lineNbr": 87,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-14T05:16:02Z",
      "side": 1,
      "message": "As my opinion, the code to create the sensor D-Bus object, updating the value, functional properties of this object should implement in the other class. May be name pldmDBusSensor.\nDbus sensor class should independence with the PLDM interface. NumericSensor class will call pldm command to get the sensor value. It then call updateReading in pldmDBusSensor to update the dbus, the pldmDBusSensor class can check the threshold to create the sel log if need.\npldmDBusSensor will be similar as phosphor-hwmon or dbus-sensors.",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1df6a4e5_33ab4a03",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 11
      },
      "lineNbr": 87,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-20T13:25:54Z",
      "side": 1,
      "message": "Thanks for the comment. My idea is keeping the patch set as small as possible for current patch set and I think it will be good to refine the classes when implementing other types of PLDM sensor/effecter.",
      "parentUuid": "05924e10_c4aa119a",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6d0103_45c9e91f",
        "filename": "platform-mc/sensor_manager.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2022-07-01T09:05:17Z",
      "side": 1,
      "message": "Are we supporting asych event generation from the sensor ?\nand the ability to enable and disable this event generation (SetNumericSensorEnable)",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fbe198f_c1792ce6",
        "filename": "platform-mc/sensor_manager.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-05T17:09:34Z",
      "side": 1,
      "message": "It is not in current plan due to lack of hardware for developing and testing.",
      "parentUuid": "4d6d0103_45c9e91f",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e294c5d_f78afcfb",
        "filename": "platform-mc/sensor_manager.hpp",
        "patchSetId": 11
      },
      "lineNbr": 60,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-14T05:10:28Z",
      "side": 1,
      "message": "This function is used to update the value of NumericSensor. The function name should include the sensor type.",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cd523e0_fb7651a4",
        "filename": "platform-mc/sensor_manager.hpp",
        "patchSetId": 11
      },
      "lineNbr": 60,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-20T13:25:54Z",
      "side": 1,
      "message": "The function name is named for matching the name used in DSP0248 18.2 GetSensorReading Command.\nFor state sensor, the corresponding function name will be sendGetStateSensorReadings() for matching the name, GetStateSensorReadings, which is defined in the DSP0248 20.2",
      "parentUuid": "6e294c5d_f78afcfb",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "917ac5d2_49047456",
        "filename": "platform-mc/sensor_manager.hpp",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-14T05:10:28Z",
      "side": 1,
      "message": "The function name should be updated also.",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35927f00_732df01d",
        "filename": "platform-mc/sensor_manager.hpp",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-20T13:25:54Z",
      "side": 1,
      "message": "It is for matching the name defined in DSP0248 18.2",
      "parentUuid": "917ac5d2_49047456",
      "revId": "34134ed12ce221c62d5d64b81899d2d6f40089fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}