{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7486843e_d430dc3a",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 965,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2022-07-03T16:43:18Z",
      "side": 1,
      "message": "need to check whether req is valid or not",
      "range": {
        "startLine": 965,
        "startChar": 41,
        "endLine": 965,
        "endChar": 44
      },
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71573ed1_3ed74515",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 965,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-07-07T12:24:49Z",
      "side": 1,
      "message": "I have checked other encode_req API I dont see anywhere req is checked for encode_req.. but when we decode_req checking invalid payload data and length",
      "parentUuid": "7486843e_d430dc3a",
      "range": {
        "startLine": 965,
        "startChar": 41,
        "endLine": 965,
        "endChar": 44
      },
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6234733_ba48a370",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 965,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-07-11T05:39:10Z",
      "side": 1,
      "message": "\u003e I have checked other encode_req API I dont see anywhere req is checked for encode_req.. but when we decode_req checking invalid payload data and length\n\nI think what gokul meant here is that , we need to check req for null before doing the de-reference. Like wise in other places too.",
      "parentUuid": "71573ed1_3ed74515",
      "range": {
        "startLine": 965,
        "startChar": 41,
        "endLine": 965,
        "endChar": 44
      },
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0331c92d_0a1fa6db",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 965,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-07-12T06:08:23Z",
      "side": 1,
      "message": "@951 we are checking \n\nif (msg \u003d\u003d NULL) {\n                return PLDM_ERROR_INVALID_DATA;\n        }\n\nAlso, we are covering in unit test case\n\nTEST(NewFileAvailableWithMetaData, testBadEncodeRequest)\n{\n    uint8_t fileType \u003d 0xFF;\n    uint32_t fileHandle \u003d 0;\n    uint32_t length \u003d 0;\n    uint32_t fileMetaData1 \u003d 0;\n    uint32_t fileMetaData2 \u003d 0;\n    uint32_t fileMetaData3 \u003d 0;\n    uint32_t fileMetaData4 \u003d 0;\n\n    // request is NULL pointer\n    auto rc \u003d encode_new_file_with_metadata_req(\n        0, fileType, fileHandle, length, fileMetaData1, fileMetaData2,\n        fileMetaData3, fileMetaData4, NULL);\n\n    ASSERT_EQ(rc, PLDM_ERROR_INVALID_DATA);\n}\n\nwe are checking the msg.. I think it is enough.",
      "parentUuid": "d6234733_ba48a370",
      "range": {
        "startLine": 965,
        "startChar": 41,
        "endLine": 965,
        "endChar": 44
      },
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13bb7ede_cff77e7a",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 993,
      "author": {
        "id": 1000929
      },
      "writtenOn": "2022-07-03T16:43:18Z",
      "side": 1,
      "message": "need to add a check to verify response-\u003ecompletion_code is valid or not\n\ni can see the same issue in other places too",
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "206ef41a_85995379",
        "filename": "oem/ibm/libpldm/file_io.c",
        "patchSetId": 2
      },
      "lineNbr": 993,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-07-07T12:24:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13bb7ede_cff77e7a",
      "revId": "b25cb604e189f3e0194bd094242e7b1fc444daf6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}