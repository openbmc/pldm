{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73f71d1c_857a5a91",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-04-07T04:23:44Z",
      "side": 1,
      "message": "1. Do we have PLDM retry mechanism for soft-off? This might be interesting topic, since retry mechanism in pldm daemon. softoff is one-off pldm knowing app at the moment. Do we see more pldm knowing apps in the future..etc. A good topic for community discussion and not to hold this patch.\n\n2.\n\u003ethe soft off application would not start any timer \u0026 would wait for the host to gracefullyshutdown.\n\nWhat will be the behavior if host never sees the power off request and the graceful shutdown RF API never completes?\nI am thinking we need to articulate the flow better, in the context of error paths.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "c165e2c157923d9ca490f8dce24d01b00530ddfc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "075028cc_c2225da7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-04-11T03:04:52Z",
      "side": 1,
      "message": "\u003e Do we have PLDM retry mechanism for soft-off? This might be interesting topic, since retry mechanism in pldm daemon. softoff is one-off pldm knowing app at the moment. Do we see more pldm knowing apps in the future..etc. A good topic for community discussion and not to hold this patch.\n\nNo , we dont have any retries \u0026 yes i do see apps directly talking to host is gonna be a usecase which needs to have a better design and discussion with in the community.\n\n\u003e What will be the behavior if host never sees the power off request and the graceful shutdown RF API never completes?\n\nSo, currently this is what happens :\n1. softoff app requests a power off request \u0026 start a timer.\n2. host will shutdown the partitions \u0026 send a sensor event back (telling that they are now ready \u0026 then we can go ahead and pull the chassis power).\n3. if the timer expires before getting the sensor event from host - we will forcefully remove the chassis power after a standard timeout.\n\nNow, we have seen cases where host complains that they have not received the power off request , but on the bmc side we see that we trigerred the request (and got a response as well).\nIn this case - when the timer expires we will go ahead and remove the chassis power forcefully. The problem with this is once the host goes down we cannot collect any debug data - which is primarily the usecase that drove this feature.\n\nThis commit would add - a runtime override config support for softoff to not have any timeouts. So that chassis power off target will never be invoked(as there is no timer expiry). This would give time for some one to collect the debug data on host side.",
      "parentUuid": "73f71d1c_857a5a91",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "c165e2c157923d9ca490f8dce24d01b00530ddfc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaef158d_373ae4c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-04-13T01:41:48Z",
      "side": 1,
      "message": "\u003e Now, we have seen cases where host complains that they have not received the power off request ,\nThis seems counter-intuitive, by power off request I am thinking it is the set effecter. If set effecter is not received, host will never initiate graceful shutdown. So indefinite timeout is a moot point.\n\n\n\u003e This commit would add - a runtime override config support for softoff to not have any timeouts. So that chassis power off target will never be invoked(as there is no timer expiry). This would give time for some one to collect the debug data on host side.\n\nMy concern and what I am trying to understand is whether expectation around softoff application has changed. The design was for BMC (user uses GracefulShutdown RF API) to use PLDM mechanisms to gracefully shutdown host and power off the chassis. From this comment I am inferring that for unclear reason/congestion PLDM mechanisms didn\u0027t work and soft off app waits indefinitely. Is it the case that with timeout flag, soft-off app never completes?\n\nThis seems like a workaround. I am not sure whether we should upstream this. The correct thing would be to retry pldm requests and if host is unresponsive, then soft-off application fail.\n\n\u003e 1. softoff app requests a power off request \u0026 start a timer.\nIf would be great if you can document this flow as README under softoff/README.md",
      "parentUuid": "075028cc_c2225da7",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "c165e2c157923d9ca490f8dce24d01b00530ddfc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}