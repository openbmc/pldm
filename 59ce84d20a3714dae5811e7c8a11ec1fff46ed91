{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5fbe6737_96fa0b63",
        "filename": "common/utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 891,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "return empty string and having that checked in every caller is usually error prone, i would rather suggest we return std::nullopt with the signature changed to std::optional.",
      "range": {
        "startLine": 891,
        "startChar": 8,
        "endLine": 891,
        "endChar": 18
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32fd5b72_d2448f50",
        "filename": "common/utils.hpp",
        "patchSetId": 10
      },
      "lineNbr": 673,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "bios attributes can also be integer or enum type, if the return type is just string .. this does not seem to qualify as a generic util function that every one can use. can you scale this to work with any type ?",
      "range": {
        "startLine": 673,
        "startChar": 0,
        "endLine": 673,
        "endChar": 28
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f820bc14_d4c9635d",
        "filename": "common/utils.hpp",
        "patchSetId": 10
      },
      "lineNbr": 681,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "I think similar comment would even apply for this ?",
      "range": {
        "startLine": 681,
        "startChar": 0,
        "endLine": 681,
        "endChar": 56
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bbdfcbd_27a047e4",
        "filename": "oem/ibm/libpldmresponder/inband_code_update.cpp",
        "patchSetId": 10
      },
      "lineNbr": 472,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "need to check for exceptions.",
      "range": {
        "startLine": 472,
        "startChar": 4,
        "endLine": 472,
        "endChar": 58
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d560d3f5_7da07c70",
        "filename": "oem/ibm/libpldmresponder/inband_code_update.cpp",
        "patchSetId": 10
      },
      "lineNbr": 485,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "if a new field gets added into the structure in the future, do we have anything to rely on to maintain forward - backward compatibility.",
      "range": {
        "startLine": 484,
        "startChar": 0,
        "endLine": 485,
        "endChar": 30
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c103e507_50787e04",
        "filename": "oem/ibm/libpldmresponder/inband_code_update.hpp",
        "patchSetId": 10
      },
      "lineNbr": 226,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-08-21T10:12:16Z",
      "side": 1,
      "message": "it is just `return` right ? i dont think it is return []",
      "range": {
        "startLine": 226,
        "startChar": 14,
        "endLine": 226,
        "endChar": 16
      },
      "revId": "59ce84d20a3714dae5811e7c8a11ec1fff46ed91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}