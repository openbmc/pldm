{
  "comments": [
    {
      "key": {
        "uuid": "06abc43b_0fbff5fe",
        "filename": "libpldmresponder/fru.cpp",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T18:12:30Z",
      "side": 1,
      "message": "Very rarely, if ever, should we catch std::exception.  I see this all over the PLDM codebase - lets try to put a stop to that.  This a well documented anti-pattern:\n\nhttps://github.com/openbmc/docs/blob/master/anti-patterns.md#handling-unexpected-error-codes-and-exceptions\n\nWhat you should do here is remove this catch block and let the exception propagate.  If you have any -specific- errors you want to handle here that\u0027s fine - write catch blocks for those specific errors and handle them accordingly (with retries, etc).\n\nLooking through this function, I don\u0027t see any errors we\u0027d want to handle.  Can you think of any?",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 327,
        "endChar": 35
      },
      "revId": "ca7f6f817cb45f1090b9dd7f74bce383f89f5dea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22627648_70584bf5",
        "filename": "libpldmresponder/fru.cpp",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T18:12:30Z",
      "side": 1,
      "message": "continuing the thought from 327 above - a core dump is much more useful than this information in the case of unanticipated errors.",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 332,
        "endChar": 63
      },
      "revId": "ca7f6f817cb45f1090b9dd7f74bce383f89f5dea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a363a485_14e1db29",
        "filename": "libpldmresponder/fru.cpp",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T18:12:30Z",
      "side": 1,
      "message": "is this meant to be commented out?",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 347,
        "endChar": 52
      },
      "revId": "ca7f6f817cb45f1090b9dd7f74bce383f89f5dea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f5df1c_c9bd34d2",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T18:12:30Z",
      "side": 1,
      "message": "\"using\" should never appear in a header file.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 5
      },
      "revId": "ca7f6f817cb45f1090b9dd7f74bce383f89f5dea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68a35a67_a6655aad",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T18:12:30Z",
      "side": 1,
      "message": "Why not just subscribe to anything with an Item interface?  We want everything on DBus in the PDR eventually anyway right?",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 83,
        "endChar": 46
      },
      "revId": "ca7f6f817cb45f1090b9dd7f74bce383f89f5dea",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}