{
  "comments": [
    {
      "key": {
        "uuid": "81b5d574_d09abc5d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "Tested section, if not for detailed outputs a summary should do.",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf49ba97_0cc194a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81b5d574_d09abc5d",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f81a0c3f_1eb8e1a9",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "nit: masterJsonPath could be misleading, fruMasterJsonPath?",
      "range": {
        "startLine": 58,
        "startChar": 19,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4ee4123_8d825b20",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "nit: D-Bus",
      "range": {
        "startLine": 58,
        "startChar": 72,
        "endLine": 58,
        "endChar": 76
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67283984_d186d401",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f81a0c3f_1eb8e1a9",
      "range": {
        "startLine": 58,
        "startChar": 19,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d82fb183_caf00598",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4ee4123_8d825b20",
      "range": {
        "startLine": 58,
        "startChar": 72,
        "endLine": 58,
        "endChar": 76
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c3694d0_2891eb20",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "Let\u0027s prefer std::filesystem::path for file system paths, even though there exceptions around :-).",
      "range": {
        "startLine": 65,
        "startChar": 43,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f369ed15_cd1877c5",
        "filename": "libpldmresponder/fru.hpp",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c3694d0_2891eb20",
      "range": {
        "startLine": 65,
        "startChar": 43,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29d672b1_0bfb580a",
        "filename": "libpldmresponder/fru_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "What code would catch this? I think InternalFailure is used less in the project.\n\nWant daemon to crash and not continue or still continue?",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a3666d0_2e106eb6",
        "filename": "libpldmresponder/fru_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "My intent was to halt the execution of pldm when the config file was wrong by throwing xyz::openbmc_project::Common::Error::InternalFailure . It does not make sense to continue as the bmc fru record table \u0026 entity association PDR is the basis for normalization.we can go into all sorts of trouble in the later stages of booting. when this map is null.",
      "parentUuid": "29d672b1_0bfb580a",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21182f15_ff84687b",
        "filename": "libpldmresponder/fru_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-13T03:04:21Z",
      "side": 1,
      "message": "Based on this https://github.com/openbmc/docs/blob/master/anti-patterns.md#handling-unexpected-error-codes-and-exceptions, should we just abort here?",
      "parentUuid": "4a3666d0_2e106eb6",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43aff339_bea9dca7",
        "filename": "libpldmresponder/fru_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-13T03:25:02Z",
      "side": 1,
      "message": "yes, the pldm application already aborts here and core dumps after throwing xyz::openbmc_project::Common::Error::InternalFailure.\n\nError case traces : \n\nParsing FRU Dbus Lookup Map config file failed, FILE\u003d/usr/share/pldm/fru_master.json, terminate called after throwing an instance of \u0027sdbusplus::xyz::openbmc_project::Common::Error::InternalFailure\u0027\n  what():  xyz.openbmc_project.Common.Error.InternalFailure: The operation failed internally.\n\n[1]+  Aborted                 (core dumped) /tmp/pldmd --verbose\u003d1",
      "parentUuid": "21182f15_ff84687b",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7908a89d_b10634fa",
        "filename": "libpldmresponder/fru_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-13T03:32:42Z",
      "side": 1,
      "message": "Yup, so instead of InternalFailure, just use std::abort?",
      "parentUuid": "43aff339_bea9dca7",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76bf1208_95ea2e52",
        "filename": "oem/ibm/configurations/fru_master.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-08T06:39:21Z",
      "side": 1,
      "message": "Do we have a new Vendor entry already?",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a697b55_8c3c1231",
        "filename": "oem/ibm/configurations/fru_master.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T02:42:39Z",
      "side": 1,
      "message": "I did not get your statement, so the whole point in adding this support was to stop sending certain information that host already knows.\n\nfor example, on IBM systems processors \u0026 dimm information are already available for a host(hostboot), so there is not point in sending them from bmc.\n\nwith eariler design, as it was generic code, we were forced to send cpu \u0026 dimm info even when we did not want it.",
      "parentUuid": "76bf1208_95ea2e52",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a1c3f08_612341e8",
        "filename": "oem/ibm/configurations/fru_master.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-09T04:02:01Z",
      "side": 1,
      "message": "Got it, so it was getting finer control on the FRU records sent.",
      "parentUuid": "0a697b55_8c3c1231",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63297edc_b13afaa1",
        "filename": "oem/ibm/configurations/fru_master.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-07-09T04:23:19Z",
      "side": 1,
      "message": "Also, this would be useful in cases where we dont have specific entities in the spec.For example : we dont have a pcie slot rather we have a generic slot ,so vendors can choose to pick nvme slot in that placeholder or a pcie slot..and not clutter the community code.",
      "parentUuid": "0a697b55_8c3c1231",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcb242e7_254db402",
        "filename": "oem/ibm/configurations/fru_master.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-07-13T03:04:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "63297edc_b13afaa1",
      "revId": "972a7d4778184639e8c85325b9e2554480806c3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}