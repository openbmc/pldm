{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ecda10de_34f7e9a1",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-13T09:46:35Z",
      "side": 1,
      "message": "The messages of interfaceAdded and interfaceRemoved signal is difference. They should be handled by two difference functions, I think.",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d268e317_0b26920f",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 38,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-14T10:51:02Z",
      "side": 1,
      "message": "The currently implementation treats the interfaceAdded and InterfaceRemoved signal like a event that the MCTP topology has been changed and then MCTPDiscovery passes the latest MCTP Endpoint list to each manager handlers(e.g. fw-update, platform-mc).\n\nThis design thinking makes the manager handlers(fw-update, platform-mc) don\u0027t need to added additional callback function for Removed signals and MCTPDiscovery also doesn\u0027t need to cache previous MCTP endpoint list to compare the latest list to find out which endpoint is removed because each handlers should already maintain a EID list which is managed by them currently.\n\nPlease let me know if this design fits your requirement.",
      "parentUuid": "ecda10de_34f7e9a1",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b35e1678_bf4cb068",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-08-16T07:18:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d268e317_0b26920f",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ab980a_55b475b4",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 47,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2022-06-30T08:58:08Z",
      "side": 1,
      "message": "If there are multiple MCTP daemons which expose this interface under different service names then it would be safer to use object mapper to find all such services.",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d442c2ad_51611afb",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 47,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-18T08:08:45Z",
      "side": 1,
      "message": "+1. May not be as part of this change but it might help in easy transition to kernel MCTP.",
      "parentUuid": "c2ab980a_55b475b4",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556314db_ff4bf774",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 93,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-13T09:46:35Z",
      "side": 1,
      "message": "msg.read() with objPath, interfaces will failed with error:\n\"ssd_bus_message_enter_container emplace_container: System.Error.ENXIO: No such device or ads\" the try catch should added.",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aafe434_16ea51f6",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 93,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-18T03:29:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "556314db_ff4bf774",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1392c10_4f43cb9c",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 114,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2022-06-30T08:58:08Z",
      "side": 1,
      "message": "Is there a possibility that the EiD list would have duplicates when discovered and static EiDs are merged ?",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8434d98a_f4c2458d",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 114,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-18T08:08:45Z",
      "side": 1,
      "message": "As i mentioned above, it is valid and possible if we are supporting multiple MCTP networks. I don\u0027t think current stack support multiple MCTP networks or mctp daemons.\n\nIn case of single mctp network, it can happen only due to some invalid configuration and it will be a good addition to check for duplicates while emplacing elements to mctpInfos.",
      "parentUuid": "f1392c10_4f43cb9c",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b9c234e_4d59ccbb",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 151,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-07-13T09:46:35Z",
      "side": 1,
      "message": "When the signal is removedInterface(), mctpInfos.size() is 0. But the termini of the removed eid have to be removed. So handleMCTPEndpoints have to be called.",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bded060_fd195668",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 20
      },
      "lineNbr": 151,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-07-18T03:29:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1b9c234e_4d59ccbb",
      "revId": "871b19b2f78245dc9e266ae3f0e8d9e70ad6b474",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}