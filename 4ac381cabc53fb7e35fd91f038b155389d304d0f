{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "71993c6d_858a5f9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:42:06Z",
      "side": 1,
      "message": "Should we add the option to enable or disable this log?\nAfter this code there is two logs (different style) for one threshold log.",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd22e086_0f3ab2fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T22:59:36Z",
      "side": 1,
      "message": "We formally support log filtering in phosphor-logging now. I was considering making it easier for platforms to turn this off. That is one direction we can go in: \n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-logging/+/81041/1/tools/phosphor-logging/sensor-thresholds-eventfilter.json",
      "parentUuid": "71993c6d_858a5f9f",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76d97052_4f73837b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T08:09:07Z",
      "side": 1,
      "message": "Beside phosphor-logging,  phosphor-sel-logger is also used to monitor the threshold alarm to create SEL log.\nSo create filter in phosphor-logging is not enough I think.",
      "parentUuid": "dd22e086_0f3ab2fb",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69b7c805_7db19f5b",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 25,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "I think we should not add variable in code for unit-test purpose.",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11b8fc9e_e23a6885",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 25,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T22:59:36Z",
      "side": 1,
      "message": "Sorry. I could not find another way to keep the unit tests happy and not expect services. I am open to suggestions.",
      "parentUuid": "69b7c805_7db19f5b",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67bb42da_f71a92d0",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 25,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T10:39:49Z",
      "side": 1,
      "message": "I tried to removed PLDM_THRESHOLD_LOGGING and run unit-test locally. I don\u0027t see the build error.",
      "parentUuid": "11b8fc9e_e23a6885",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fbf9c91_9f83f54e",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 931,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "IN above logic, the threshold log will only be printed when the `alarm \u003d\u003d newAlarm`. But this condition only check `newAlarm`. Can you detail more about this?",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e69e538_236aa24d",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 931,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T22:59:36Z",
      "side": 1,
      "message": "we return early and dont print anything if alarm \u003d\u003d newAlarm (line 913).",
      "parentUuid": "7fbf9c91_9f83f54e",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18125f7b_c9ceb178",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 931,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T08:09:07Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8e69e538_236aa24d",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51aeef5f_fcdbab40",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 933,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "As my understanding, when there is newAlarm, `createThresholdLog` will be called to update `assertedLog`.\nWhich code will log to journal? in this condition?",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e370c0_0ed1e637",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 933,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T22:59:36Z",
      "side": 1,
      "message": "Its createThresholdLog which will call lg2::commit(). lg2::commit will create a new phospor-logging entry and I have noticed that it also creates a journal entry.",
      "parentUuid": "51aeef5f_fcdbab40",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a764cabe_51d551cc",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 933,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T08:09:07Z",
      "side": 1,
      "message": "Can you point out the code? In `createThresholdLog` I only see `lg2::error` bug not lg2::commit().",
      "parentUuid": "d5e370c0_0ed1e637",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75641ac6_edee1e3c",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 937,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "When `createThresholdLog(level, direction, value);` is not called what will be the value of `assertedLog[{level, direction}];`?",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef73efa1_86ee953e",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 937,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T22:59:36Z",
      "side": 1,
      "message": "the map\u003c\u003e\u0027s [] operator would create a default if there is no value for the provided key. Since the default constructor for the value/std::optional is std::nullopt, the subsequent log.has_value() would return false.",
      "parentUuid": "75641ac6_edee1e3c",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5640c5fd_26c38cfb",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 937,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T08:09:07Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ef73efa1_86ee953e",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11380216_d81e9f0b",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 965,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "Is this c++ type casting?",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0fa6171_f623f2a0",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 965,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T23:00:16Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "11380216_d81e9f0b",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7886ba33_65cb5cb4",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 970,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T10:39:49Z",
      "side": 1,
      "message": "Can we update code like this?\n```\nvoid NumericSensor::clearThresholdLog(\n    std::optional\u003csdbusplus::message::object_path\u003e\u0026 log)\n{\n    if (!log)\n    {\n        return;\n    }\n\n    try\n    {\n        lg2::resolve(*log);\n    }\n    catch (std::exception\u0026 ec)\n    {\n        lg2::error(\"Error trying to resolve: {LOG} : {ERROR}\", \"LOG\", log-\u003estr,\n                   \"ERROR\", ec);\n    }\n    log.reset();\n}\n```",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a194696_34f98a35",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1000,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "Can you move this before try. It is more easy to read AMO.",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d495b25b_8fff3282",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1000,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T23:00:16Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6a194696_34f98a35",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8493446d_89c7c7a0",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1031,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T09:38:50Z",
      "side": 1,
      "message": "Don\u0027t need `.what()` for lg2 calls.\nApply the same for others logs.",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd050555_ca5fae47",
        "filename": "platform-mc/numeric_sensor.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1031,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-06-25T23:00:16Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8493446d_89c7c7a0",
      "revId": "4ac381cabc53fb7e35fd91f038b155389d304d0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}