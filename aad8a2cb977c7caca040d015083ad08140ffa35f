{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "92531bd4_20c0025f",
        "filename": "common/instance_id.hpp",
        "patchSetId": 27
      },
      "lineNbr": 8,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-06-04T04:08:38Z",
      "side": 1,
      "message": "need to also include\n\n#include \u003csystem_error\u003e  \n#include \u003ccerrno\u003e\n\n?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4bfb414_9d0e5211",
        "filename": "common/instance_id.hpp",
        "patchSetId": 27
      },
      "lineNbr": 8,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-02T07:27:53Z",
      "side": 1,
      "message": "I noticed that `#include \u003csystem_error\u003e` and `#include \u003ccerrno\u003e` are already present, so I believe there is no need to include them again.",
      "parentUuid": "92531bd4_20c0025f",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 19
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73a0fec1_f21c1f3b",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T07:42:51Z",
      "side": 1,
      "message": "These are changing in DeviceUpdater APIs return.\nCan you separate these changing to different commit/",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f849020_8e4521cd",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-06-30T06:00:16Z",
      "side": 1,
      "message": "However, if I modify `instanceIdDb.next`, it will inevitably affect the way errors are handled in the DeviceUpdater part.\nCould you please advise me on how to handle this to avoid the issue of blindly discarded errors mentioned earlier?\nThank you very much!",
      "parentUuid": "73a0fec1_f21c1f3b",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d885105_5b9090da",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-02T07:27:53Z",
      "side": 1,
      "message": "For now, in `DeviceUpdater` and `InventoryManager`, I am handling errors by returning early and adding a TODO comment. Is this approach acceptable?",
      "parentUuid": "0f849020_8e4521cd",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44154e93_8f30534b",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T07:54:52Z",
      "side": 1,
      "message": "The most simple way is just `return;` when `if (!instanceIdResult)` or in the error case. Then you can add other commit to return error code.",
      "parentUuid": "9d885105_5b9090da",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7823fdb2_0bb90c15",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-02T09:09:35Z",
      "side": 1,
      "message": "So, my current handling in `DeviceUpdater` and `InventoryManager` should already comply with the simple return approach.\nFor other parts, I am also returning or co_returning `PLDM_ERROR` directly in error cases.\nWould you recommend adding TODO comments in all such places and addressing them in separate commits, or is there any other change you would suggest here?\nThank you for your feedback.",
      "parentUuid": "44154e93_8f30534b",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b896141_8cb3109d",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-07-02T09:42:37Z",
      "side": 1,
      "message": "\u003e So, my current handling in `DeviceUpdater` and `InventoryManager` should already comply with the simple return approach.\n\nSound great.\n\n\u003e For other parts, I am also returning or co_returning `PLDM_ERROR` directly in error cases.\n\u003e Would you recommend adding TODO comments in all such places and addressing them in separate commits, or is there any other change you would suggest here?\n\nAbout todo, I don\u0027t think we need. Just add new commit to change APIs as you did in the old code on top this patch set.\n\n\u003e Thank you for your feedback.",
      "parentUuid": "7823fdb2_0bb90c15",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ee8f2f7_e96be18b",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-07T05:04:32Z",
      "side": 1,
      "message": "I have removed all the TODO comments as suggested.\nDoes this meet your expectations?\nPlease let me know if there are any other areas you think need to be modified.\nThank you very much for your feedback!",
      "parentUuid": "3b896141_8cb3109d",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab21c9bf_0637d326",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-06-04T04:08:38Z",
      "side": 1,
      "message": "I think these patterns can be eliminated by using a function template, which can spit out a log, return an error back to the caller or returns the value.",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592e381d_4daee1a3",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-06-13T11:20:58Z",
      "side": 1,
      "message": "Could you kindly specify the format of the function template you are looking for? \nAdditionally, could you let me know if we need to handle cases involving throw, return void, and return int?\nThank you very much.",
      "parentUuid": "ab21c9bf_0637d326",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e8102a_dbaf8255",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-06-16T06:07:30Z",
      "side": 1,
      "message": "If possible, I would appreciate clear guidance and examples to help me resolve the issue of avoiding core dumps when the pldmd instance ID is exhausted.\nThank you very much!",
      "parentUuid": "592e381d_4daee1a3",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59229a41_91165033",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-06-25T10:24:28Z",
      "side": 1,
      "message": "what i meant was , something along these lines : \n\n```\ntemplate \u003ctypename T\u003e\nstd::expected\u003cT, int\u003e GetInstanceID(const std::expected\u003cT, InstanceIdError\u003e\u0026 result)\n{\n    if (!result)\n    {\n        const auto\u0026 err \u003d result.error();\n        std::cerr \u003c\u003c \"Failed to allocate instance ID: rc\u003d\"\n                  \u003c\u003c err.rc() \u003c\u003c \", msg\u003d\" \u003c\u003c err.msg() \u003c\u003c \u0027\\n\u0027;\n        return std::unexpected(err.rc());\n    }\n    return result.value();\n}\n\n```\n\nand it could be used like this ? \n\n```\nauto instanceIdResult \u003d GetInstanceID(updateManager-\u003einstanceIdDb.next(eid));\nif (!instanceIdResult)\n    return instanceIdResult.error();\n```\n\ndoes it make sense ? (this sort of thing will reduce the repeated pattern all over the patch)",
      "parentUuid": "b2e8102a_dbaf8255",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2aaa03_c1dcd2e2",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-06-30T06:00:16Z",
      "side": 1,
      "message": "Okay, I understand. I will try to modify it this way first.\nThank you very much for your explanation.",
      "parentUuid": "59229a41_91165033",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89de1723_ef2d899c",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-02T07:27:53Z",
      "side": 1,
      "message": "Hi @manojkiran.eda@gmail.com\n\nI made a slight change from your original suggestion.\nInstead of returning only the error code (rc) from `getInstanceId`, I now have `InstanceIdDb::next()` construct a complete `InstanceIdError` (including a detailed error message) at the source.\nThen, `getInstanceId` template function simply logs the error and propagates the full InstanceIdError object upward, rather than just returning the error code.\n\nThis approach gives more flexibility to the caller:\nthey can choose to handle the error code, access the full error message, or even throw the `InstanceIdError` further up the call stack, as needed.\n\nLet me know if you have any concerns with this approach.",
      "parentUuid": "8c2aaa03_c1dcd2e2",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d2e3c15_4aaaeacc",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-07-07T05:46:18Z",
      "side": 1,
      "message": "Yes, this sounds a lot better \u0026 cleaner than where we began.",
      "parentUuid": "89de1723_ef2d899c",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 31,
        "endChar": 47
      },
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94614f62_e647f2f7",
        "filename": "softoff/softoff.cpp",
        "patchSetId": 27
      },
      "lineNbr": 291,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-06-21T07:42:51Z",
      "side": 1,
      "message": "Output message meets Anti-pattern in lg2: https://github.com/openbmc/docs/blob/master/anti-patterns.md#ill-defined-data-structuring-in-lg2-message-strings\nCheck the others output message also.",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26362ec3_a43cf097",
        "filename": "softoff/softoff.cpp",
        "patchSetId": 27
      },
      "lineNbr": 291,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-06-30T06:00:16Z",
      "side": 1,
      "message": "I will check it again",
      "parentUuid": "94614f62_e647f2f7",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71ab2b37_c1c7e009",
        "filename": "softoff/softoff.cpp",
        "patchSetId": 27
      },
      "lineNbr": 291,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-07-02T07:27:53Z",
      "side": 1,
      "message": "Since using lg2 in `utils.hpp` seems to require modifying the meson build files, I am currently still using `std::cerr` for error messages.\nDo you think this is acceptable, or should I switch to using lg2 for logging?",
      "parentUuid": "26362ec3_a43cf097",
      "revId": "aad8a2cb977c7caca040d015083ad08140ffa35f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}