{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a8bf6eb7_25a9b38a",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "As per convention, even for constants we follow lowerCamelCase.\nhttps://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#naming-conventions",
      "range": {
        "startLine": 20,
        "startChar": 18,
        "endLine": 20,
        "endChar": 29
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47470e34_70e2dc4b",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8bf6eb7_25a9b38a",
      "range": {
        "startLine": 20,
        "startChar": 18,
        "endLine": 20,
        "endChar": 29
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82d2d8a8_3a7895cd",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 124,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "Please remove unused variables.",
      "range": {
        "startLine": 124,
        "startChar": 25,
        "endLine": 124,
        "endChar": 34
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "447f1603_0b047f2e",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 124,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82d2d8a8_3a7895cd",
      "range": {
        "startLine": 124,
        "startChar": 25,
        "endLine": 124,
        "endChar": 34
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cddfb200_c976b84a",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "Not all endpoint may/may not support all the handlers. Like, say endpoint X supports PLDM FWUP but not M\u0026C. In that case, we need to identify that as part of discovery using GetPLDMTypes and invoke PLDM handlers accordingly.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 151,
        "endChar": 9
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feb4460c_521c6e20",
        "filename": "requester/mctp_endpoint_discovery.cpp",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Identifying the supported PLDM message type is done by the each handler for now per the discussion https://gerrit.openbmc-project.xyz/c/openbmc/pldm/+/51184/comment/a666041e_a168ce2c/\n\nYes, the current design should be improved to avoid redundant discovery performed by each handler.",
      "parentUuid": "cddfb200_c976b84a",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 151,
        "endChar": 9
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47aefd7e_832f6d9e",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "What does I denotes here?",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 7
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e18ab592_26403c7f",
        "filename": "requester/mctp_endpoint_discovery.hpp",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Fixed. It was a mistake when updating the define from IMctpDiscoveryHandler to MctpDiscoveryHandlerIntf",
      "parentUuid": "47aefd7e_832f6d9e",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 7
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26ce6a9_4a7443b3",
        "filename": "requester/test/static_eid_table.json",
        "patchSetId": 9
      },
      "lineNbr": 2,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "Nit: Endpoints",
      "range": {
        "startLine": 2,
        "startChar": 5,
        "endLine": 2,
        "endChar": 14
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38d5650e_71a5c65a",
        "filename": "requester/test/static_eid_table.json",
        "patchSetId": 9
      },
      "lineNbr": 2,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d26ce6a9_4a7443b3",
      "range": {
        "startLine": 2,
        "startChar": 5,
        "endLine": 2,
        "endChar": 14
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2181af13_2d67230b",
        "filename": "requester/test/static_eid_table.json",
        "patchSetId": 9
      },
      "lineNbr": 4,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-04-14T10:29:24Z",
      "side": 1,
      "message": "nit: NetworkID?\n\nGood to have a consistent naming convention. It can be either lowercase separated by underscores or UpperCamelCase.",
      "range": {
        "startLine": 4,
        "startChar": 13,
        "endLine": 4,
        "endChar": 23
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f19d0a28_2780f2b2",
        "filename": "requester/test/static_eid_table.json",
        "patchSetId": 9
      },
      "lineNbr": 4,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-15T23:57:39Z",
      "side": 1,
      "message": "Fixed. changed to NetworkId to match the define in https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml#L9",
      "parentUuid": "2181af13_2d67230b",
      "range": {
        "startLine": 4,
        "startChar": 13,
        "endLine": 4,
        "endChar": 23
      },
      "revId": "48912cb4722c87f8a9034b09f0f31b1c20ac3303",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}