{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "05b4b1f6_1a66eb94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "can you also update the test results on the machine that does not have compatible system interface implemented or entity manager not running ?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 39
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fde8d9b1_e3f1392e",
        "filename": "common/utils.cpp",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "this is not correct, the getSubtree call should be made from a try catch block , it should not be inside the util function.\n\nWe should give the ability to handle exceptions from the clients that use this API (we cannot decide the clients exception behaviour).",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 241,
        "endChar": 5
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "865d6f5d_c8699d94",
        "filename": "libpldmresponder/bios_config.cpp",
        "patchSetId": 8
      },
      "lineNbr": 469,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "redundant check ? this check is done at line number 465",
      "range": {
        "startLine": 469,
        "startChar": 9,
        "endLine": 469,
        "endChar": 37
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60423034_365d328c",
        "filename": "libpldmresponder/bios_config.cpp",
        "patchSetId": 8
      },
      "lineNbr": 479,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "why is this needed ? we are not using it anywhere right ?",
      "range": {
        "startLine": 479,
        "startChar": 3,
        "endLine": 479,
        "endChar": 43
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5955c3_f90d087f",
        "filename": "libpldmresponder/bios_config.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "can we add this in the load() , rather than repeating the same logic in other places ?",
      "range": {
        "startLine": 481,
        "startChar": 7,
        "endLine": 484,
        "endChar": 9
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89725abe_87aa7bef",
        "filename": "libpldmresponder/bios_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 302,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-08-30T11:35:54Z",
      "side": 1,
      "message": "can we have func name as \u0027checkIfPlatformSpecific\u0027  ?",
      "range": {
        "startLine": 302,
        "startChar": 9,
        "endLine": 302,
        "endChar": 26
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec5eb1e_c899882c",
        "filename": "libpldmresponder/bios_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 302,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2022-09-05T08:14:29Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "89725abe_87aa7bef",
      "range": {
        "startLine": 302,
        "startChar": 9,
        "endLine": 302,
        "endChar": 26
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2382fa76_af4a420c",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "bind_front instead ?",
      "range": {
        "startLine": 29,
        "startChar": 16,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e7ba85_ccfcbe83",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2022-09-06T10:04:01Z",
      "side": 1,
      "message": "We need to monitor interface added signal only if Entity Manager has not populated the interface when we checked. First we should check if xyz.openbmc_project.Configuration.IBMCompatibleSystem interface is populated by EM if not then only monitor for interface added signal.\nThis way you can avoid calling getConfigDir from bios_config.cpp file.",
      "range": {
        "startLine": 23,
        "startChar": 8,
        "endLine": 30,
        "endChar": 50
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0c5a10a_96be8f8e",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-08-30T11:35:54Z",
      "side": 1,
      "message": "can we give any other func name?\n\nif this is ibm specific should this is be under oem/ibm ?",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 35
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ffbc42b_988ed4a9",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "why do you need this to be public ?",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 41,
        "endChar": 29
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a110cd4_b1f856eb",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "magic number",
      "range": {
        "startLine": 64,
        "startChar": 26,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d08c2ade_ff9e3427",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 82,
      "author": {
        "id": 1001384
      },
      "writtenOn": "2022-09-06T10:04:01Z",
      "side": 1,
      "message": "These variables can be declared as static variables under namespace pldm::responder and can be used in both functions getConfigDir and ibmCompatibleAddedCallback",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 82,
        "endChar": 54
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ce1b52_94fffe72",
        "filename": "libpldmresponder/system_config.hpp",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2022-08-30T07:22:10Z",
      "side": 1,
      "message": "this should have been in the try - catch block.",
      "range": {
        "startLine": 90,
        "startChar": 7,
        "endLine": 92,
        "endChar": 65
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b57bbdcb_10357065",
        "filename": "libpldmresponder/test/libpldmresponder_bios_config_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-08-30T11:35:54Z",
      "side": 1,
      "message": "this is specific to bios right.. so should we say as MockBiosSystemConfig ?",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 79,
        "endChar": 22
      },
      "revId": "23135fb1e44c861cad193f8cd02c8159802b0b59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}