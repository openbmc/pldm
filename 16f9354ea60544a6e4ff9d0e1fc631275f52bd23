{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e1678375_8afa8721",
        "filename": "common/types.hpp",
        "patchSetId": 30
      },
      "lineNbr": 25,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Just \u0027tid\u0027 should suffice. It is known that TID is a PLDM identifier, so PLDM prefix will not give any additional info. https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#types",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 14
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5f50f34_81ec76a6",
        "filename": "common/types.hpp",
        "patchSetId": 30
      },
      "lineNbr": 25,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e1678375_8afa8721",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 14
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f38ec24_832ee8c3",
        "filename": "libpldm/platform.h",
        "patchSetId": 30
      },
      "lineNbr": 58,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "MCTP_EID_NULL ?",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dfb25cd_b82a627f",
        "filename": "libpldm/platform.h",
        "patchSetId": 30
      },
      "lineNbr": 58,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-28T15:40:46Z",
      "side": 1,
      "message": "The name of definition is referred to the table 2 of DSP0236 v1.3.1. It defines that EID\u003d0 is a Null destination/Source EID.",
      "parentUuid": "3f38ec24_832ee8c3",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebdcaf0f_01c6a8a0",
        "filename": "libpldm/platform.h",
        "patchSetId": 30
      },
      "lineNbr": 58,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-09-16T07:56:24Z",
      "side": 1,
      "message": "Yes, NULL EID is MCTP specific not PLDM. so, adding PLDM prefix is kind of confusing. But I suppose the PLDM prefix is added since it is part of libpldm.",
      "parentUuid": "0dfb25cd_b82a627f",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1945642_1cdf51ae",
        "filename": "libpldm/platform.h",
        "patchSetId": 30
      },
      "lineNbr": 58,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-09-18T16:13:33Z",
      "side": 1,
      "message": "The define is removed since new pushed patch set implements TID pool doesn\u0027t need  it now.",
      "parentUuid": "ebdcaf0f_01c6a8a0",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 22
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "037dbde3_a8844ce6",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 24,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Does this mean that when PLDM supports other transport layer, it should have an equivalent class preforming these functions?",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 37
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52ffa01e_0e98e25f",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 24,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "The new patch set reserved the flexibility to support other transport layer.\nThe idea is to define new XXXDiscoveryHandlerIntf(e.g XXX\u003dNCSI) and then implemented the interface APIs.",
      "parentUuid": "037dbde3_a8844ce6",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 37
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b424af29_d555a07e",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 24,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-09-16T07:56:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "52ffa01e_0e98e25f",
      "range": {
        "startLine": 24,
        "startChar": 25,
        "endLine": 24,
        "endChar": 37
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48ec3c7_55b4ee30",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "How are we planning to handle when we support multiple MCTP networks? Duplicate EIDs are possible in that case. It will be better if we can have some directions to avoid future redesigns.\n\nAs per specification TIDs should be unique but not EID. So we can have a map with terminus as key \n```\nstd::map\u003cstd::shared_ptr\u003cTerminus\u003e, \n     mctp_eid_t /* or MctpInfo or TransportIdentifier */\u003e termini{};\n```\n\nOR\nwe can have something like\n```\nstd::map \u003cMctpInfo, std::shared_ptr\u003cTerminus\u003e\u003e termini{}\n```\nWhere MctpInfo can have EID, UUID/NetworkID",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a719e589_c76f2646",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "For supporting other transport layer, the map key is changed to use tid.\nThe NetworkID is included in MctpInfo.\nThe toMctpInfo() can lookup terminus\u0027s MctpInfo by tid.",
      "parentUuid": "e48ec3c7_55b4ee30",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff284099_922c4f24",
        "filename": "platform-mc/manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-11-14T04:50:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a719e589_c76f2646",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36cc330c_439e1c21",
        "filename": "platform-mc/terminus.hpp",
        "patchSetId": 30
      },
      "lineNbr": 48,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Are we not planning to use libpldm provided pdr?\nhttps://github.com/openbmc/pldm/blob/master/libpldm/pdr.c#L16\n\nI know current libpldm implementation of PDR primarily concentrate on responder usecase. But two major things which i was able to leverage from it in Intel implementation was PDR repository storage mechanism and APIs for managing/creating entity association tree from PDR data.",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 45
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eea9432_bf5aa32c",
        "filename": "platform-mc/terminus.hpp",
        "patchSetId": 30
      },
      "lineNbr": 48,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-15T00:31:39Z",
      "side": 1,
      "message": "The libpldm is moved to separate repo.",
      "parentUuid": "36cc330c_439e1c21",
      "range": {
        "startLine": 48,
        "startChar": 1,
        "endLine": 48,
        "endChar": 45
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd68005_291b0eb8",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 7,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "The terminus manager is directly coupled with mctp EID since Terminus manager is mainly for handling PLDM endpoints, shall we refer all the places by TID alone and remove EID references. we may need to get the EID only at the time of sending the PLDM request. at this point we can use the TIDPool( which keeps the \nTID-to-EID map) to get the EID .\ngetting the EID from TID could be part of the request/handler class rather than inside terminus manager.\nThe same TIDPool map can be used to keep the TID to transport endpoint ID( for example, transport endpoint id can be eid for MCTP and EBT UUID for NCSI over RBT ) \nIf we are looking forward supporting other transport this changes will make it easy to adapt other transport layers w.r.t the following design.\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/47519",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 21
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc4ddbf5_61a23d1d",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 7,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fcd68005_291b0eb8",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 21
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c99d6d_a5e2674f",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 28,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Note:- This logic will not work in multi-network MCTP. We always need to work with MctpInfo not just EID.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b83fcea7_fce94bff",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 28,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "The argument is changed to MctpInfo and the function checkes networkId in new patch set.",
      "parentUuid": "f3c99d6d_a5e2674f",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "937a4b47_d9f36a1b",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 28,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-11-14T04:50:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b83fcea7_fce94bff",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10f39af5_f6c3d42b",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 31,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "This is the map which creates TID to transport specific endpoint ID(mctp eid or RBT UUID) map.\ncan we make it to accept generic type name like size_t so that it look common for any transport layer Endpoint.",
      "range": {
        "startLine": 31,
        "startChar": 40,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac2fe99a_6e46c648",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 31,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "mapToTid() is updated to take MctpInfo tuple to support multiple MCTP network.\nTo support other transport layer can overload mapToTid() to take transport specific parameter.",
      "parentUuid": "10f39af5_f6c3d42b",
      "range": {
        "startLine": 31,
        "startChar": 40,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74dd197c_b4893e84",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 31,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-08-15T00:31:39Z",
      "side": 1,
      "message": "Any feedback @Naveen Moses?",
      "parentUuid": "ac2fe99a_6e46c648",
      "range": {
        "startLine": 31,
        "startChar": 40,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8df172f_fe2875b5",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 31,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-11-15T11:19:19Z",
      "side": 1,
      "message": "Mark as resolve because no new feedback from @Naveen Moses",
      "parentUuid": "74dd197c_b4893e84",
      "range": {
        "startLine": 31,
        "startChar": 40,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bc16c07_bdbd0841",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 61,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "should this be named as discover MCTP based terminus discoverMctpTerminusTask() so that other transport layer(ncsi) based Terminus discovery  can be added separately.\nThese methods can be used part of the pldm endpoint discovery process using method\ndiscoverMctpTerminusTask() similarly discoverNCSIRBTTerminusTask() can be added.\nboth methods discovers PLDM endpoints available over these transport layers\nand final TID list is added part of the same TIDPool map.(TID to EID or TID to RBT UUID)\nAfter this point terminus manager can only refer TIDs and at the time of\nsending the PLDM request (SendRecvPldmMsg) using the TIDPoolMap we can get the respective transport layer endpoint IDs.",
      "range": {
        "startLine": 61,
        "startChar": 38,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0e416f8_d3de6088",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 61,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4bc16c07_bdbd0841",
      "range": {
        "startLine": 61,
        "startChar": 38,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f6328c3_9175f23d",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 159,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "In case setTID is not supported(device having some static TID), we should atleast reserve the TID reported in getTID in our TID pool so that we will not use it for another device.",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "623b0f89_d7eb70d1",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 159,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8f6328c3_9175f23d",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6b60676_f13cb52b",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Any plan to suport GetPDRRepositoryInfo command? It is a mandatory command in M\u0026C to verify repositoryState and other details before issuing getPDR command.",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b546d47_5bd2f403",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "Working on it. will be implemented in next version of patch set.",
      "parentUuid": "e6b60676_f13cb52b",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0861d7ab_cf592fb3",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "It is implemented in new patch set.",
      "parentUuid": "2b546d47_5bd2f403",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c081d705_5dfb28c4",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 175,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "The getTID and setTID are used part of PLDM terminus discovery part.at this point we might not have created the TIDPool map which we have discussed in the other comment.should we rename these methods to setTIDOverMCTP() and getTIDOverMCTP() as it only sets/gets TID for mctp based pldm endpoint.",
      "range": {
        "startLine": 175,
        "startChar": 38,
        "endLine": 175,
        "endChar": 44
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf93ced4_79525cdb",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 175,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c081d705_5dfb28c4",
      "range": {
        "startLine": 175,
        "startChar": 38,
        "endLine": 175,
        "endChar": 44
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d965131_9526c4a3",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 265,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "The terminus manager being a PLDM terminus manager,I think  MCTP EID association is not needed until this point which is SendRecvPldmMsg function.\nso up to this point we can refer the PLDM endpoints solely based on TID reference itself. the requester/handler part of PLDM service can use the TID_to_EID map (tidPool)to get the EID from the TID right before sending the PLDM message.",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 265,
        "endChar": 4
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b61718_8cdb5d67",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 265,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-28T15:40:46Z",
      "side": 1,
      "message": "MCTP EID association is needed for PLDM encode request message API() too.\nSince instanceId is part of PLDM message header and generating instanceId is managed by https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/PLDM/Requester.interface.yaml.\nAccording to the description of Requester.interface, EID is used for input argument to generate instanceId.",
      "parentUuid": "1d965131_9526c4a3",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 265,
        "endChar": 4
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87b51be3_592bd077",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 265,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "The terminusManager implemented its SendRecvPldmMsg() which takes TID now.",
      "parentUuid": "b6b61718_8cdb5d67",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 265,
        "endChar": 4
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a466cb_106fc477",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 272,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Do we need a null check here before accessing value?",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "592440a0_5bad0105",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 272,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b6a466cb_106fc477",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b2cff11_8ab79564",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 303,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "In this case let\u0027s clear terminus-\u003epdrs to make sure we are starting fresh. It helps in case we want to fetch the PDR again using this function.",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26c0c810_449b0979",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 303,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b2cff11_8ab79564",
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "055ee094_4de58c0c",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 312,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "We might need a le16toh() conversation here.",
      "range": {
        "startLine": 312,
        "startChar": 0,
        "endLine": 312,
        "endChar": 62
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e8a4140_97e8a404",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 312,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "055ee094_4de58c0c",
      "range": {
        "startLine": 312,
        "startChar": 0,
        "endLine": 312,
        "endChar": 62
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecf333e1_bc98a8b0",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 335,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "We can\u0027t neglect the possibility of faulty PLDM devices(add in cards) which never returns nextDataTransferHndl as 0. If that happens we will end up in an infinite while loop. \n\nI would suggest to have a limit on multipart transfer as a fail safe.\nOr you can support getPDRRepositoryInfo command and use largestRecordSize value to cross verify that you are not fetching any record whose size exceeds that value.",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 335,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18d2010d_ac5a2528",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 335,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ecf333e1_bc98a8b0",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 335,
        "endChar": 48
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71f81594_0814d20c",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 337,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Similar possibility of infinite while loop here as well.\n\nHere you can use recordCount from GetPDRRepositoryInfo command as the fail safe.",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 337,
        "endChar": 34
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f50582e_5eac3057",
        "filename": "platform-mc/terminus_manager.cpp",
        "patchSetId": 30
      },
      "lineNbr": 337,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "71f81594_0814d20c",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 337,
        "endChar": 34
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7267f0d_7263dbf6",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 23,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "From what i see, this class manages TID assignment flow. Which is common for all PLDM types. I would recommend to keep it generic so that other PLDM types also can make use of it and work with TID.\n\nIf we can exclude PDR related APIs out of this class, it should suffice.\n\nAlso, in future when we like to support other transport layers like NCSI, we can extend the same class for TID assignment.",
      "range": {
        "startLine": 23,
        "startChar": 33,
        "endLine": 23,
        "endChar": 78
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28dc3f2c_cb82207e",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 23,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "The PDR related APIs are move to platform_manager.hpp/cpp",
      "parentUuid": "a7267f0d_7263dbf6",
      "range": {
        "startLine": 23,
        "startChar": 33,
        "endLine": 23,
        "endChar": 78
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fa3c02_3d94a520",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 80,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "data?",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 24
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37cd3332_940d9d59",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 80,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-31T15:11:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "27fa3c02_3d94a520",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 24
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "537697db_ac53fda3",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 169,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-08-19T12:40:00Z",
      "side": 1,
      "message": "Lets not use mctp_eid_t type TID. Let\u0027s have a tid type.",
      "range": {
        "startLine": 169,
        "startChar": 16,
        "endLine": 169,
        "endChar": 26
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05d6f7e_4a46589a",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 169,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-08-26T12:46:40Z",
      "side": 1,
      "message": "+1\nI think terminus manager can also be only associated PLDM TID alone in case we are looking forward to support other transport layers.we could decouple the use of mctp eids from this class and move the translation of the EID from TID to a separate code.",
      "parentUuid": "537697db_ac53fda3",
      "range": {
        "startLine": 169,
        "startChar": 16,
        "endLine": 169,
        "endChar": 26
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb21689a_2cab7629",
        "filename": "platform-mc/terminus_manager.hpp",
        "patchSetId": 30
      },
      "lineNbr": 169,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-08-30T05:07:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a05d6f7e_4a46589a",
      "range": {
        "startLine": 169,
        "startChar": 16,
        "endLine": 169,
        "endChar": 26
      },
      "revId": "16f9354ea60544a6e4ff9d0e1fc631275f52bd23",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}