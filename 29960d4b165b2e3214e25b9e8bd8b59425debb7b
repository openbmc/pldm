{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90ca5251_ebd51742",
        "filename": "common/instance_id.hpp",
        "patchSetId": 18
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-20T21:09:01Z",
      "side": 1,
      "message": "`const std::string\u0026`\n\nIf you think that being able to move an r-value string is more efficient in some cases, create a separate r-value consuming constructor.",
      "range": {
        "startLine": 32,
        "startChar": 28,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87bf6ebc_3a8a6374",
        "filename": "common/instance_id.hpp",
        "patchSetId": 18
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-20T21:09:01Z",
      "side": 1,
      "message": "Won\u0027t be able to move once it is changed to `const std::string\u0026`.",
      "range": {
        "startLine": 32,
        "startChar": 59,
        "endLine": 32,
        "endChar": 70
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9ecbe86_7ace3b89",
        "filename": "common/instance_id.hpp",
        "patchSetId": 18
      },
      "lineNbr": 32,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-05-21T11:39:47Z",
      "side": 1,
      "message": "I\u0027ve added both constructors: one taking const std::string\u0026 (copy) and one taking std::string\u0026\u0026 (move) to support both cases efficiently.\nThank you very much!",
      "parentUuid": "90ca5251_ebd51742",
      "range": {
        "startLine": 32,
        "startChar": 28,
        "endLine": 32,
        "endChar": 41
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "851955e6_35b5c32f",
        "filename": "common/instance_id.hpp",
        "patchSetId": 18
      },
      "lineNbr": 32,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-05-21T11:39:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87bf6ebc_3a8a6374",
      "range": {
        "startLine": 32,
        "startChar": 59,
        "endLine": 32,
        "endChar": 70
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c58b736d_8aef0707",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-20T21:09:01Z",
      "side": 1,
      "message": "This is silently changing behavior.  We have to change all of these APIs to either throw like they use to or return the `expected` failure.\n\nThe way you\u0027ve written this up, the caller has no idea that their operation was not completed correctly.",
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56950242_64b91420",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-21T02:04:32Z",
      "side": 1,
      "message": "I agree with Patrick. My comment regarding log messages and comments was the backstop solution where it wasn\u0027t obvious what other course of action should be taken. But that\u0027s not the case here. This method should propagate the error and the call-site(s) should be updated to handle the unexpected case (and do so recursively as required).",
      "parentUuid": "c58b736d_8aef0707",
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e578ed2c_5a5c287c",
        "filename": "fw-update/device_updater.cpp",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-05-21T11:39:47Z",
      "side": 1,
      "message": "I have changed the original void functions `sendActivateFirmwareRequest`, `sendUpdateComponentRequest`, `sendPassCompTableRequest`, and `startFwUpdateFlow` to return int error codes instead, and now propagate errors upwards via their return values.\nIs this approach acceptable?",
      "parentUuid": "56950242_64b91420",
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "568a4114_eb221190",
        "filename": "fw-update/inventory_manager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-20T21:09:01Z",
      "side": 1,
      "message": "Is there a reason we can\u0027t throw the instance from the expected?",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 49,
        "endChar": 62
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bed3d4a1_6d2540d9",
        "filename": "fw-update/inventory_manager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 49,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-05-21T11:39:47Z",
      "side": 1,
      "message": "Gerrit CI (clang-tidy) complains because `std::expected::error()` returns a reference, so throwing it directly is unsafe.\nI changed it to `throw InstanceIdError(instanceIdResult.error());` to throw a copy instead.",
      "parentUuid": "568a4114_eb221190",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 49,
        "endChar": 62
      },
      "revId": "29960d4b165b2e3214e25b9e8bd8b59425debb7b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}